{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"[1] Non eram nescius, Brute, cum, quae summis ingeniis exquisitaque doctrina philosophi Graeco sermone tractavissent, ea Latinis litteris mandaremus, fore ut hic noster labor in varias reprehensiones incurreret. nam quibusdam, et iis quidem non admodum indoctis, totum hoc displicet philosophari. quidam autem non tam id reprehendunt, si remissius agatur, sed tantum studium tamque multam operam ponendam in eo non arbitrantur. erunt etiam, et ii quidem eruditi Graecis litteris, contemnentes Latinas, qui se dicant in Graecis legendis operam malle consumere. postremo aliquos futuros suspicor, qui me ad alias litteras vocent, genus hoc scribendi, etsi sit elegans, personae tamen et dignitatis esse negent. [2] Contra quos omnis dicendum breviter existimo. Quamquam philosophiae quidem vituperatoribus satis responsum est eo libro, quo a nobis philosophia defensa et collaudata est, cum esset accusata et vituperata ab Hortensio. qui liber cum et tibi probatus videretur et iis, quos ego posse iudicare arbitrarer, plura suscepi veritus ne movere hominum studia viderer, retinere non posse. Qui autem, si maxime hoc placeat, moderatius tamen id volunt fieri, difficilem quandam temperantiam postulant in eo, quod semel admissum coerceri reprimique non potest, ut propemodum iustioribus utamur illis, qui omnino avocent a philosophia, quam his, qui rebus infinitis modum constituant in reque eo meliore, quo maior sit, mediocritatem desiderent. [3] Sive enim ad sapientiam perveniri potest, non paranda nobis solum ea, sed fruenda etiam [sapientia] est; sive hoc difficile est, tamen nec modus est ullus investigandi veri, nisi inveneris, et quaerendi defatigatio turpis est, cum id, quod quaeritur, sit pulcherrimum. etenim si delectamur, cum scribimus, quis est tam invidus, qui ab eo nos abducat? sin laboramus, quis est, qui alienae modum statuat industriae? nam ut Terentianus Chremes non inhumanus, qui novum vicinum non vult 'fodere aut arare aut aliquid ferre denique' -- non enim illum ab industria, sed ab inliberali labore deterret --, sic isti curiosi, quos offendit noster minime nobis iniucundus labor. [4] Iis igitur est difficilius satis facere, qui se Latina scripta dicunt contemnere. in quibus hoc primum est in quo admirer, cur in gravissimis rebus non delectet eos sermo patrius, cum idem fabellas Latinas ad verbum e Graecis expressas non inviti legant. quis enim tam inimicus paene nomini Romano est, qui Ennii Medeam aut Antiopam Pacuvii spernat aut reiciat, quod se isdem Euripidis fabulis delectari dicat, Latinas litteras oderit? Synephebos ego, inquit, potius Caecilii aut Andriam Terentii quam utramque Menandri legam? [5] A quibus tantum dissentio, ut, cum Sophocles vel optime scripserit Electram, tamen male conversam Atilii mihi legendam putem, de quo Lucilius: 'ferreum scriptorem', verum, opinor, scriptorem tamen, ut legendus sit. rudem enim esse omnino in nostris poetis aut inertissimae segnitiae est aut fastidii delicatissimi. mihi quidem nulli satis eruditi videntur, quibus nostra ignota sunt. an 'Utinam ne in nemore . . .' nihilo minus legimus quam hoc idem Graecum, quae autem de bene beateque vivendo a Platone disputata sunt, haec explicari non placebit Latine? [6] Quid? si nos non interpretum fungimur munere, sed tuemur ea, quae dicta sunt ab iis quos probamus, eisque nostrum iudicium et nostrum scribendi ordinem adiungimus, quid habent, cur Graeca anteponant iis, quae et splendide dicta sint neque sint conversa de Graecis? nam si dicent ab illis has res esse tractatas, ne ipsos quidem Graecos est cur tam multos legant, quam legendi sunt. quid enim est a Chrysippo praetermissum in Stoicis? legimus tamen Diogenem, Antipatrum, Mnesarchum, Panaetium, multos alios in primisque familiarem nostrum Posidonium. quid? Theophrastus mediocriterne delectat, cum tractat locos ab Aristotele ante tractatos? quid? Epicurei num desistunt de isdem, de quibus et ab Epicuro scriptum est et ab antiquis, ad arbitrium suum scribere? quodsi Graeci leguntur a Graecis isdem de rebus alia ratione compositis, quid est, cur nostri a nostris non legantur? [7] Quamquam, si plane sic verterem Platonem aut Aristotelem, ut verterunt nostri poetae fabulas, male, credo, mererer de meis civibus, si ad eorum cognitionem divina illa ingenia transferrem. sed id neque feci adhuc nec mihi tamen, ne faciam, interdictum puto. locos quidem quosdam, si videbitur, transferam, et maxime ab iis, quos modo nominavi, cum inciderit, ut id apte fieri possit, ut ab Homero Ennius, Afranius a Menandro solet. Nec vero, ut noster Lucilius, recusabo, quo minus omnes mea legant. utinam esset ille Persius, Scipio vero et Rutilius multo etiam magis, quorum ille iudicium reformidans Tarentinis ait se et Consentinis et Siculis scribere. facete is quidem, sicut alia; sed neque tam docti tum erant, ad quorum iudicium elaboraret, et sunt illius scripta leviora, ut urbanitas summa appareat, doctrina mediocris. [8] Ego autem quem timeam lectorem, cum ad te ne Graecis quidem cedentem in philosophia audeam scribere? quamquam a te ipso id quidem facio provocatus gratissimo mihi libro, quem ad me de virtute misisti. Sed ex eo credo quibusdam usu venire; ut abhorreant a Latinis, quod inciderint in inculta quaedam et horrida, de malis Graecis Latine scripta deterius. quibus ego assentior, dum modo de isdem rebus ne Graecos quidem legendos putent. res vero bonas verbis electis graviter ornateque dictas quis non legat? nisi qui se plane Graecum dici velit, ut a Scaevola est praetore salutatus Athenis Albucius. [9] Quem quidem locum comit multa venustate et omni sale idem Lucilius, apud quem praeclare Scaevola: Graecum te, Albuci, quam Romanum atque Sabinum, municipem Ponti, Tritani, centurionum, praeclarorum hominum ac primorum signiferumque, maluisti dici. Graece ergo praetor Athenis, id quod maluisti, te, cum ad me accedis, saluto: 'chaere,' inquam, 'Tite!' lictores, turma omnis chorusque: 'chaere, Tite!' hinc hostis mi Albucius, hinc inimicus. [10] Sed iure Mucius. ego autem mirari [satis] non queo unde hoc sit tam insolens domesticarum rerum fastidium. non est omnino hic docendi locus; sed ita sentio et saepe disserui, Latinam linguam non modo non inopem, ut vulgo putarent, sed locupletiorem etiam esse quam Graecam. quando enim nobis, vel dicam aut oratoribus bonis aut poetis, postea quidem quam fuit quem imitarentur, ullus orationis vel copiosae vel elegantis ornatus defuit? Ego vero, quoniam forensibus operis, laboribus, periculis non deseruisse mihi videor praesidium, in quo a populo Romano locatus sum, debeo profecto, quantumcumque possum, in eo quoque elaborare, ut sint opera, studio, labore meo doctiores cives mei, nec cum istis tantopere pugnare, qui Graeca legere malint, modo legant illa ipsa, ne simulent, et iis servire, qui vel utrisque litteris uti velint vel, si suas habent, illas non magnopere desiderent. [11] Qui autem alia malunt scribi a nobis, aequi esse debent, quod et scripta multa sunt, sic ut plura nemini e nostris, et scribentur fortasse plura, si vita suppetet; et tamen, qui diligenter haec, quae de philosophia litteris mandamus, legere assueverit, iudicabit nulla ad legendum his esse potiora. quid est enim in vita tantopere quaerendum quam cum omnia in philosophia, tum id, quod his libris quaeritur, qui sit finis, quid extremum, quid ultimum, quo sint omnia bene vivendi recteque faciendi consilia referenda, quid sequatur natura ut summum ex rebus expetendis, quid fugiat ut extremum malorum? qua de re cum sit inter doctissimos summa dissensio, quis alienum putet eius esse dignitatis, quam mihi quisque tribuat, quid in omni munere vitae optimum et verissimum sit, exquirere? [12] An, partus ancillae sitne in fructu habendus, disseretur inter principes civitatis, P. Scaevolam Maniumque Manilium, ab iisque M. Brutus dissentiet -- quod et acutum genus est et ad usus civium non inutile, nosque ea scripta reliquaque eiusdem generis et legimus libenter et legemus -- haec, quae vitam omnem continent, neglegentur? nam, ut sint illa vendibiliora, haec uberiora certe sunt. quamquam id quidem licebit iis existimare, qui legerint. nos autem hanc omnem quaestionem de finibus bonorum et malorum fere a nobis explicatam esse his litteris arbitramur, in quibus, quantum potuimus, non modo quid nobis probaretur, sed etiam quid a singulis philosophiae disciplinis diceretur, persecuti sumus. [13] Ut autem a facillimis ordiamur, prima veniat in medium Epicuri ratio, quae plerisque notissima est. quam a nobis sic intelleges eitam, ut ab ipsis, qui eam disciplinam probant, non soleat accuratius explicari; verum enim invenire volumus, non tamquam adversarium aliquem convincere. accurate autem quondam a L. Torquato, homine omni doctrina erudito, defensa est Epicuri sententia de voluptate, a meque ei responsum, cum C. Triarius, in primis gravis et doctus adolescens, ei disputationi interesset. [14] Nam cum ad me in Cumanum salutandi causa uterque venisset, pauca primo inter nos de litteris, quarum summum erat in utroque studium, deinde Torquatus: Quoniam nacti te, inquit, sumus aliquando otiosum, certe audiam, quid sit, quod Epicurum nostrum non tu quidem oderis, ut fere faciunt, qui ab eo dissentiunt, sed certe non probes, eum quem ego arbitror unum vidisse verum maximisque erroribus animos hominum liberavisse et omnia tradidisse, quae pertinerent ad bene beateque vivendum. sed existimo te, sicut nostrum Triarium, minus ab eo delectari, quod ista Platonis, Aristoteli, Theophrasti orationis ornamenta neglexerit. nam illud quidem adduci vix possum, ut ea, quae senserit ille, tibi non vera videantur. [15] Vide, quantum, inquam, fallare, Torquate. oratio me istius philosophi non offendit; nam et complectitur verbis, quod vult, et dicit plane, quod intellegam; et tamen ego a philosopho, si afferat eloquentiam, non asperner, si non habeat, non admodum flagitem. re mihi non aeque satisfacit, et quidem locis pluribus. sed quot homines, tot sententiae; falli igitur possumus. Quam ob rem tandem, inquit, non satisfacit? te enim iudicem aequum puto, modo quae dicat ille bene noris. [16] Nisi mihi Phaedrum, inquam, tu mentitum aut Zenonem putas, quorum utrumque audivi, cum mihi nihil sane praeter sedulitatem probarent, omnes mihi Epicuri sententiae satis notae sunt. atque eos, quos nominavi, cum Attico nostro frequenter audivi, cum miraretur ille quidem utrumque, Phaedrum autem etiam amaret, cotidieque inter nos ea, quae audiebamus, conferebamus, neque erat umquam controversia, quid ego intellegerem, sed quid probarem. [17] Quid igitur est? inquit; audire enim cupio, quid non probes. Principio, inquam, in physicis, quibus maxime gloriatur, primum totus est alienus. Democritea dicit perpauca mutans, sed ita, ut ea, quae corrigere vult, mihi quidem depravare videatur. ille atomos quas appellat, id est corpora individua propter soliditatem, censet in infinito inani, in quo nihil nec summum nec infimum nec medium nec ultimum nec extremum sit, ita ferri, ut concursionibus inter se cohaerescant, ex quo efficiantur ea, quae sint quaeque cernantur, omnia, eumque motum atomorum nullo a principio, sed ex aeterno tempore intellegi convenire. [18] Epicurus autem, in quibus sequitur Democritum, non fere labitur. quamquam utriusque cum multa non probo, tum illud in primis, quod, cum in rerum natura duo quaerenda sint, unum, quae materia sit, ex qua quaeque res efficiatur, alterum, quae vis sit, quae quidque efficiat, de materia disseruerunt, vim et causam efficiendi reliquerunt. sed hoc commune vitium, illae Epicuri propriae ruinae: censet enim eadem illa individua et solida corpora ferri deorsum suo pondere ad lineam, hunc naturalem esse omnium corporum motum. [19] Deinde ibidem homo acutus, cum illud ocurreret, si omnia deorsus e regione ferrentur et, ut dixi, ad lineam, numquam fore ut atomus altera alteram posset attingere itaque ** attulit rem commenticiam: declinare dixit atomum perpaulum, quo nihil posset fieri minus; ita effici complexiones et copulationes et adhaesiones atomorum inter se, ex quo efficeretur mundus omnesque partes mundi, quaeque in eo essent. Quae cum tota res (est) ficta pueriliter, tum ne efficit [quidem], quod vult. nam et ipsa declinatio ad libidinem fingitur -- ait enim declinare atomum sine causa; quo nihil turpius physico, quam fieri quicquam sine causa dicere, -- et illum motum naturalem omnium ponderum, ut ipse constituit, e regione inferiorem locum petentium sine causa eripuit atomis nec tamen id, cuius causa haec finxerat, assecutus est. [20] Nam si omnes atomi declinabunt, nullae umquam cohaerescent, sive aliae declinabunt, aliae suo nutu recte ferentur, primum erit hoc quasi, provincias atomis dare, quae recte, quae oblique ferantur, deinde eadem illa atomorum, in quo etiam Democritus haeret, turbulenta concursio hunc mundi ornatum efficere non poterit. ne illud quidem physici, credere aliquid esse minimum, quod profecto numquam putavisset, si a Polyaeno, familiari suo, geometrica discere maluisset quam illum etiam ipsum dedocere. Sol Democrito magnus videtur, quippe homini erudito in geometriaque perfecto, huic pedalis fortasse; tantum enim esse censet, quantus videtur, vel paulo aut maiorem aut minorem. [21] Ita, quae mutat, ea corrumpit, quae sequitur sunt tota Democriti, atomi, inane, imagines, quae eidola nominant, quorum incursione non solum videamus, sed etiam cogitemus; infinitio ipsa, quam apeirian vocant, tota ab illo est, tum innumerabiles mundi, qui et oriantur et intereant cotidie. Quae etsi mihi nullo modo probantur, tamen Democritum laudatum a ceteris ab hoc, qui eum unum secutus esset, nollem vituperatum. [22] Iam in altera philosophiae parte. quae est quaerendi ac disserendi, quae logikh dicitur, iste vester plane, ut mihi quidem videtur, inermis ac nudus est. tollit definitiones, nihil de dividendo ac partiendo docet, non quo modo efficiatur concludaturque ratio tradit, non qua via captiosa solvantur ambigua distinguantur ostendit; iudicia rerum in sensibus ponit, quibus si semel aliquid falsi pro vero probatum sit, sublatum esse omne iudicium veri et falsi putat. [23] Confirmat autem illud vel maxime, quod ipsa natura, ut ait ille, sciscat et probet, id est voluptatem et dolorem. ad haec et quae sequamur et quae fugiamus refert omnia. quod quamquam Aristippi est a Cyrenaicisque melius liberiusque defenditur, tamen eius modi esse iudico, ut nihil homine videatur indignius. ad maiora enim quaedam nos natura genuit et conformavit, ut mihi quidem videtur. ac fieri potest, ut errem, sed ita prorsus existimo, neque eum Torquatum, qui hoc primus cognomen invenerit, aut torquem illum hosti detraxisse, ut aliquam ex eo perciperet corpore voluptatem, aut cum Latinis tertio consulatu conflixisse apud Veserim propter voluptatem; quod vero securi percussit filium, privavisse se etiam videtur multis voluptatibus, cum ipsi naturae patrioque amori praetulerit ius maiestatis atque imperii.","title":"About"},{"location":"developer/architecture/","text":"Frontend and Backend Architecture Summary \u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 ISSUE_TEMPLATE/ \u251c\u2500\u2500 config/ \u251c\u2500\u2500 docker/ \u251c\u2500\u2500 frontend/ \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 pages/ \u2502 \u2514\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 static/ \u2502 \u2514\u2500\u2500 frontend/ \u2502 \u2514\u2500\u2500 templates/ \u2502 \u2514\u2500\u2500 frontend/ \u251c\u2500\u2500 server/ \u2502 \u2514\u2500\u2500 migrations/ \u2514\u2500\u2500 <loose files>","title":"Architecture Summary"},{"location":"developer/architecture/#frontend-and-backend-architecture-summary","text":"\u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 ISSUE_TEMPLATE/ \u251c\u2500\u2500 config/ \u251c\u2500\u2500 docker/ \u251c\u2500\u2500 frontend/ \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 pages/ \u2502 \u2514\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 static/ \u2502 \u2514\u2500\u2500 frontend/ \u2502 \u2514\u2500\u2500 templates/ \u2502 \u2514\u2500\u2500 frontend/ \u251c\u2500\u2500 server/ \u2502 \u2514\u2500\u2500 migrations/ \u2514\u2500\u2500 <loose files>","title":"Frontend and Backend Architecture Summary"},{"location":"developer/backend/","text":"","title":"Backend Architecture"},{"location":"developer/frontend/","text":"Frontend Architecture \u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 ISSUE_TEMPLATE/ \u251c\u2500\u2500 config/ \u251c\u2500\u2500 docker/ \u251c\u2500\u2500 frontend/ # Frontend \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 src/ # Frontend \u2502 \u251c\u2500\u2500 assets/ # Frontend \u2502 \u251c\u2500\u2500 components/ # Frontend \u2502 \u251c\u2500\u2500 pages/ # Frontend \u2502 \u2514\u2500\u2500 templates/ # Frontend \u2502 \u251c\u2500\u2500 static/ # Frontend \u2502 \u2514\u2500\u2500 frontend/ # Frontend \u2502 \u2514\u2500\u2500 templates/ # Frontend \u2502 \u2514\u2500\u2500 frontend/ # Frontend \u251c\u2500\u2500 server/ \u2502 \u2514\u2500\u2500 migrations/ \u2514\u2500\u2500 <loose files> Overall project structure \u251c\u2500\u2500 frontend/ \u2502 \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Apps.js \u2502 \u2514\u2500\u2500 <Components>/ \u2502 \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 templates/ \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 index.js \u2502 \u2514\u2500\u2500 index.scss \u2502 \u251c\u2500\u2500 static \u2502 \u2514\u2500\u2500 templates \u251c\u2500\u2500 .babelrc \u251c\u2500\u2500 package-lock.json \u251c\u2500\u2500 package.json \u2514\u2500\u2500 webpack.config.js Frontend Architecture Summary Frontend Tech Stack : HTML, CSS, JS, React, Babel, Webpack The frontend architecture is entirely housed in our frontend/ directory. This directory is a Django app , which is a set of files that can be ported to any Django-based application. Since our frontend is a Django app, it takes advantage of the way Django serves its static assets. Every Django app, by default, looks to the templates/ * directory within the app for the html template file to serve. This template usually contains <script> and <style> tags denoting the location of CSS and JS files. In Django, these files are usually located inside the static/ * directory. Likewise, our frontend app store our templates and static assets within these directories. Despite these similiarties, however, the files in these two directories should never be manipulated by a developer. These files are automatically generated by an application called Webpack via configurations in webpack.config.js and .babelrc . The files that should be manipulated by developers are housed within the src/ directory. Inside of here are directories for assets/ , componenents/ , pages/ , and templates/ . Each of these directories contains the files which Webpack reads and then bundle into output files for the static/ and template/ directories. *Note: The templates/ and static/ directories contain within them a frontend/ directory in order to namespace template and static files. Although this serves little purpose for our project, it is a Django convention that prevents Django from confusing the templates/ and static/ directories from the frontend app vs another app. Overview of Directories and Files frontend/: houses all the frontend files frontend/src/: houses all the files for developers to manipulate. The files here are read by Webpack before being bundled into the static/ and templates/ directories assets/: this is where we store all of our miscellaneous files, such as .jpegs, .svgs, .gifs, etc. componenents/: this is where we store the files that generate our components, such as buttons and cards. To learn more about this in-depth, read the components section of this guide. pages/: contains the React files that pools together various components to generate a page. templates/: contains html files that are then generated into the regular templates directory. To learn more about how Webpack bundle our files, read the Webpack section of this guide. index.js: this file serves as the entry point for all other js files*. This file is read by Webpack, and then bundled into code in the static directory. index.scss: this file serves as the entry point for all other scss files*. frontend/static/: automatically generated by Webpack, DO NOT EDIT frontend/templates/: automatically generated by Webpack, DO NOT EDIT .babelrc: Babel's configuration. To learn more about this, please visit babel's documentation . package-lock.json & package.json: These files are created by npm to keep track of dependencies. Please visit npm's documentation to understand them. webpack.config.js: Webpack's configuration. To learn more about configuring Webpack, please visit their documentation . To learn about our specific configuration, see the below guide . *Note: This is technically a lie. In actuality, index.js , reads index.scss as well as the React files, making it the only entryway for all files bundled in the src/ directory. Components Directory \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Basics/ \u2502 \u251c\u2500\u2500 Colors.scss \u2502 \u2514\u2500\u2500 Titles.scss \u2502 \u251c\u2500\u2500 Buttons/ \u2502 \u251c\u2500\u2500 Buttons.js \u2502 \u2514\u2500\u2500 Buttons.scss \u2502 \u251c\u2500\u2500 Cards/ \u2502 \u251c\u2500\u2500 Cards.js \u2502 \u2514\u2500\u2500 Cards.scss \u2502 \u2514\u2500\u2500 <Components>/ A closer look at a theoretical expansion of the components directory The components directory contains our website components. Each directory in here represents a different class of components, such as Buttons/ * or Cards/ *. Within these directories are the files necessary that creates these components. Likewise, the special Basics/ directory contains small css classes that are reused, but not, technically, components, such as text-size or text-colors. *Note: These files are capitalized to follow React convention for components. When making new components, please make sure to follow this convention. This convention is in place to help React differentiate between modules vs other types of imports. Webpack Configurations ... module.exports = { mode: 'development', entry: { index: \"./frontend/src/index.js\" }, output: { clean: { keep: '.gitkeep' }, filename: '[name].[contenthash].js', path: path.resolve(__dirname, 'frontend/static/frontend'), }, devtool: 'inline-source-map', module: { rules: ... }, optimization: { moduleIds: 'deterministic', runtimeChunk: 'single', splitChunks: ... }, plugins: [ new HtmlWebpackPlugin({ filename: '../../templates/frontend/index.html', template: '/frontend/src/templates/index.html', }), ], watchOptions: { ignored: /node_modules/, }, } webpack.config.js (truncated) Our webpack.config.js file is one of the most important files to understanding how our frontend architecture comes together. Therefore, this section is dedicated to the settings that we have set for this file. Note that we do not explain all the settings, as some can be found and easily deduced from webpack's configuration and guides documentation. entry: the file that is ultimately read by webpack to bundle everything together. This file, index.js imports all dependencies and files that makes up our product. Note that advanced multiple entry is possible, should we ever need it. output: contains configurations for the files that are generated in the static/ directory output > clean > keep: clean is usually used to clear away old files before generating new ones (file names are variable to force browser css/js recacheing). However, keep notes files that should not be removed*. output > filename: this configures the name of the generated js files. [name] is simply the name of the file noted in the entry configuration, and [contenthash] is a randomly generated string, which forces browser recacheing. output > path: the directory to place the generated file. This directory is the one that Django, by default, detects its static files. optimization: this contains a catch-all for various ways to enhance either development or deployment. For more on our current configuration, read this guide . plugins > HtmlWebpackPlugin: this plugin enables us to dynamically generate templates with the correct <script> and <styles> path by reading the template and outputing it with the path noted by filename . This output path follows Django's default template directory structure. watchOptions > ignored: configures files to ignore when regenerating watched files. *Note: The kept .gitkeep file is there to give an empty file for git to preserve the otherwise empty directory when pushed onto GitHub. As you might have guessed, git does not push empty directories. Why do we separate Babel from Webpack? If you have explored documentation from Webpack, you might learn that the babel-loader in module > rules can accept the settings noted in .babelrc . The reason why we separate these settings into another file is because Webpack is not, in theory, the only application that makes use of these settings. Although we have no other apps that makes use of .babelrc at the moment, this can change in the future. Therefore, this separation of files is a form of future proofing.","title":"Frontend Architecture"},{"location":"developer/frontend/#frontend-architecture","text":"\u251c\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 ISSUE_TEMPLATE/ \u251c\u2500\u2500 config/ \u251c\u2500\u2500 docker/ \u251c\u2500\u2500 frontend/ # Frontend \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 src/ # Frontend \u2502 \u251c\u2500\u2500 assets/ # Frontend \u2502 \u251c\u2500\u2500 components/ # Frontend \u2502 \u251c\u2500\u2500 pages/ # Frontend \u2502 \u2514\u2500\u2500 templates/ # Frontend \u2502 \u251c\u2500\u2500 static/ # Frontend \u2502 \u2514\u2500\u2500 frontend/ # Frontend \u2502 \u2514\u2500\u2500 templates/ # Frontend \u2502 \u2514\u2500\u2500 frontend/ # Frontend \u251c\u2500\u2500 server/ \u2502 \u2514\u2500\u2500 migrations/ \u2514\u2500\u2500 <loose files> Overall project structure \u251c\u2500\u2500 frontend/ \u2502 \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 assets/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Apps.js \u2502 \u2514\u2500\u2500 <Components>/ \u2502 \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 templates/ \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 index.js \u2502 \u2514\u2500\u2500 index.scss \u2502 \u251c\u2500\u2500 static \u2502 \u2514\u2500\u2500 templates \u251c\u2500\u2500 .babelrc \u251c\u2500\u2500 package-lock.json \u251c\u2500\u2500 package.json \u2514\u2500\u2500 webpack.config.js Frontend Architecture","title":"Frontend Architecture"},{"location":"developer/frontend/#summary","text":"Frontend Tech Stack : HTML, CSS, JS, React, Babel, Webpack The frontend architecture is entirely housed in our frontend/ directory. This directory is a Django app , which is a set of files that can be ported to any Django-based application. Since our frontend is a Django app, it takes advantage of the way Django serves its static assets. Every Django app, by default, looks to the templates/ * directory within the app for the html template file to serve. This template usually contains <script> and <style> tags denoting the location of CSS and JS files. In Django, these files are usually located inside the static/ * directory. Likewise, our frontend app store our templates and static assets within these directories. Despite these similiarties, however, the files in these two directories should never be manipulated by a developer. These files are automatically generated by an application called Webpack via configurations in webpack.config.js and .babelrc . The files that should be manipulated by developers are housed within the src/ directory. Inside of here are directories for assets/ , componenents/ , pages/ , and templates/ . Each of these directories contains the files which Webpack reads and then bundle into output files for the static/ and template/ directories.","title":"Summary"},{"location":"developer/frontend/#note-the-templates-and-static-directories-contain-within-them-a-frontend-directory-in-order-to-namespace-template-and-static-files-although-this-serves-little-purpose-for-our-project-it-is-a-django-convention-that-prevents-django-from-confusing-the-templates-and-static-directories-from-the-frontend-app-vs-another-app","text":"","title":"*Note: The templates/ and static/ directories contain within them a frontend/ directory in order to namespace template and static files. Although this serves little purpose for our project, it is a Django convention that prevents Django from confusing the templates/ and static/ directories from the frontend app vs another app."},{"location":"developer/frontend/#overview-of-directories-and-files","text":"frontend/: houses all the frontend files frontend/src/: houses all the files for developers to manipulate. The files here are read by Webpack before being bundled into the static/ and templates/ directories assets/: this is where we store all of our miscellaneous files, such as .jpegs, .svgs, .gifs, etc. componenents/: this is where we store the files that generate our components, such as buttons and cards. To learn more about this in-depth, read the components section of this guide. pages/: contains the React files that pools together various components to generate a page. templates/: contains html files that are then generated into the regular templates directory. To learn more about how Webpack bundle our files, read the Webpack section of this guide. index.js: this file serves as the entry point for all other js files*. This file is read by Webpack, and then bundled into code in the static directory. index.scss: this file serves as the entry point for all other scss files*. frontend/static/: automatically generated by Webpack, DO NOT EDIT frontend/templates/: automatically generated by Webpack, DO NOT EDIT .babelrc: Babel's configuration. To learn more about this, please visit babel's documentation . package-lock.json & package.json: These files are created by npm to keep track of dependencies. Please visit npm's documentation to understand them. webpack.config.js: Webpack's configuration. To learn more about configuring Webpack, please visit their documentation . To learn about our specific configuration, see the below guide .","title":"Overview of Directories and Files"},{"location":"developer/frontend/#note-this-is-technically-a-lie-in-actuality-indexjs-reads-indexscss-as-well-as-the-react-files-making-it-the-only-entryway-for-all-files-bundled-in-the-src-directory","text":"","title":"*Note: This is technically a lie. In actuality, index.js, reads index.scss as well as the React files, making it the only entryway for all files bundled in the src/ directory."},{"location":"developer/frontend/#components-directory","text":"\u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Basics/ \u2502 \u251c\u2500\u2500 Colors.scss \u2502 \u2514\u2500\u2500 Titles.scss \u2502 \u251c\u2500\u2500 Buttons/ \u2502 \u251c\u2500\u2500 Buttons.js \u2502 \u2514\u2500\u2500 Buttons.scss \u2502 \u251c\u2500\u2500 Cards/ \u2502 \u251c\u2500\u2500 Cards.js \u2502 \u2514\u2500\u2500 Cards.scss \u2502 \u2514\u2500\u2500 <Components>/ A closer look at a theoretical expansion of the components directory The components directory contains our website components. Each directory in here represents a different class of components, such as Buttons/ * or Cards/ *. Within these directories are the files necessary that creates these components. Likewise, the special Basics/ directory contains small css classes that are reused, but not, technically, components, such as text-size or text-colors.","title":"Components Directory"},{"location":"developer/frontend/#note-these-files-are-capitalized-to-follow-react-convention-for-components-when-making-new-components-please-make-sure-to-follow-this-convention-this-convention-is-in-place-to-help-react-differentiate-between-modules-vs-other-types-of-imports","text":"","title":"*Note: These files are capitalized to follow React convention for components. When making new components, please make sure to follow this convention. This convention is in place to help React differentiate between modules vs other types of imports."},{"location":"developer/frontend/#webpack-configurations","text":"... module.exports = { mode: 'development', entry: { index: \"./frontend/src/index.js\" }, output: { clean: { keep: '.gitkeep' }, filename: '[name].[contenthash].js', path: path.resolve(__dirname, 'frontend/static/frontend'), }, devtool: 'inline-source-map', module: { rules: ... }, optimization: { moduleIds: 'deterministic', runtimeChunk: 'single', splitChunks: ... }, plugins: [ new HtmlWebpackPlugin({ filename: '../../templates/frontend/index.html', template: '/frontend/src/templates/index.html', }), ], watchOptions: { ignored: /node_modules/, }, } webpack.config.js (truncated) Our webpack.config.js file is one of the most important files to understanding how our frontend architecture comes together. Therefore, this section is dedicated to the settings that we have set for this file. Note that we do not explain all the settings, as some can be found and easily deduced from webpack's configuration and guides documentation. entry: the file that is ultimately read by webpack to bundle everything together. This file, index.js imports all dependencies and files that makes up our product. Note that advanced multiple entry is possible, should we ever need it. output: contains configurations for the files that are generated in the static/ directory output > clean > keep: clean is usually used to clear away old files before generating new ones (file names are variable to force browser css/js recacheing). However, keep notes files that should not be removed*. output > filename: this configures the name of the generated js files. [name] is simply the name of the file noted in the entry configuration, and [contenthash] is a randomly generated string, which forces browser recacheing. output > path: the directory to place the generated file. This directory is the one that Django, by default, detects its static files. optimization: this contains a catch-all for various ways to enhance either development or deployment. For more on our current configuration, read this guide . plugins > HtmlWebpackPlugin: this plugin enables us to dynamically generate templates with the correct <script> and <styles> path by reading the template and outputing it with the path noted by filename . This output path follows Django's default template directory structure. watchOptions > ignored: configures files to ignore when regenerating watched files.","title":"Webpack Configurations"},{"location":"developer/frontend/#note-the-kept-gitkeep-file-is-there-to-give-an-empty-file-for-git-to-preserve-the-otherwise-empty-directory-when-pushed-onto-github-as-you-might-have-guessed-git-does-not-push-empty-directories","text":"","title":"*Note: The kept .gitkeep file is there to give an empty file for git to preserve the otherwise empty directory when pushed onto GitHub. As you might have guessed, git does not push empty directories."},{"location":"developer/frontend/#why-do-we-separate-babel-from-webpack","text":"If you have explored documentation from Webpack, you might learn that the babel-loader in module > rules can accept the settings noted in .babelrc . The reason why we separate these settings into another file is because Webpack is not, in theory, the only application that makes use of these settings. Although we have no other apps that makes use of .babelrc at the moment, this can change in the future. Therefore, this separation of files is a form of future proofing.","title":"Why do we separate Babel from Webpack?"}]}